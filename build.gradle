buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.4'


    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.

version = "1.0"
group = "io.flygone.disconnect" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "disconnect"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.12.2-14.23.5.2768"
    runDir = "run"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20171003"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}


repositories{
    mavenCentral()
}
dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"

    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
    //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
//    compile "org.java-websocket:Java-WebSocket:1.4.1"
//    implementation 'com.google.code.gson:gson:2.8.6'
//    implementation 'com.squareup.okhttp3:okhttp:4.5.0'
    implementation 'org.java-websocket:Java-WebSocket:1.4.1'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.squareup.okhttp3:okhttp:3.9.0'
    implementation 'org.slf4j:slf4j-api:2.0.0-alpha1'
    implementation 'com.squareup.okio:okio:2.5.0'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.3.71'

}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }

//    from('build/libs'){
//        include '*.jar'
//    }
}

shadowJar{
    classifier = ""
    relocate 'okhttp3', 'shading.okhttp3'
    relocate 'com.google', 'shading.com.google'
    relocate 'org.java_websocket', 'shading.org.java_websocket'
    relocate 'org.slf4j', 'shading.org.slf4j'
    relocate 'okio', 'shading.okio'
    relocate 'kotlin', 'shading.kotlin'

    dependencies {
        include(dependency('com.squareup.okhttp3:okhttp:3.9.0'))
        include(dependency('com.google.code.gson:gson:2.8.6'))
        include(dependency('org.java-websocket:Java-WebSocket:1.4.1'))
        include(dependency('org.slf4j:slf4j-api:2.0.0-alpha1'))
        include(dependency('com.squareup.okio:okio:2.5.0'))
        include(dependency('org.jetbrains.kotlin:kotlin-stdlib:1.3.71'))
    }
}

reobf { shadowJar { mappingType = "SEARGE" } }
tasks.reobfShadowJar.mustRunAfter shadowJar